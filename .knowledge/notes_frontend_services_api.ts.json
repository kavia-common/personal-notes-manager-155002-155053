{"is_source_file": true, "format": "TypeScript", "description": "This file defines a utility function `apiFetch` for making HTTP requests to a REST API, along with related types and functions to support API calls within a frontend application. It handles configuration, authorization tokens, request setup, and error handling.", "external_files": ["#app"], "external_methods": ["useRuntimeConfig"], "published": ["apiFetch"], "classes": [], "methods": [{"name": "function getBaseUrl(): string { getBaseUrl", "description": "Retrieves the base URL for the API from runtime configuration, ensuring no trailing slashes.", "scope": "", "scopeKind": ""}, {"name": "export async function apiFetch<T>(path: string, opts: ApiOptions = {}): Promise<T> { apiFetch", "description": "Performs an HTTP fetch request to the backend API with support for JSON payload, authorization token, and error handling.", "scope": "", "scopeKind": ""}], "calls": ["useRuntimeConfig", "fetch"], "search-terms": ["apiFetch", "TypeScript API method", "runtime config", "fetch wrapper", "authorization header", "api base URL"], "state": 2, "file_id": 12, "knowledge_revision": 26, "git_revision": "", "ctags": [{"_type": "tag", "name": "ApiOptions", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-155002-155053/notes_frontend/services/api.ts", "pattern": "/^interface ApiOptions {$/", "language": "TypeScript", "kind": "interface"}, {"_type": "tag", "name": "HttpMethod", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-155002-155053/notes_frontend/services/api.ts", "pattern": "/^type HttpMethod = 'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE';$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "apiFetch", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-155002-155053/notes_frontend/services/api.ts", "pattern": "/^export async function apiFetch<T>(path: string, opts: ApiOptions = {}): Promise<T> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "base", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-155002-155053/notes_frontend/services/api.ts", "pattern": "/^  const base = getBaseUrl();$/", "language": "TypeScript", "kind": "constant", "scope": "apiFetch", "scopeKind": "function"}, {"_type": "tag", "name": "body", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-155002-155053/notes_frontend/services/api.ts", "pattern": "/^  body?: any;$/", "language": "TypeScript", "kind": "property", "scope": "ApiOptions", "scopeKind": "interface"}, {"_type": "tag", "name": "config", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-155002-155053/notes_frontend/services/api.ts", "pattern": "/^  const config = useRuntimeConfig();$/", "language": "TypeScript", "kind": "constant", "scope": "getBaseUrl", "scopeKind": "function"}, {"_type": "tag", "name": "data", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-155002-155053/notes_frontend/services/api.ts", "pattern": "/^      const data = await res.json();$/", "language": "TypeScript", "kind": "constant", "scope": "apiFetch", "scopeKind": "function"}, {"_type": "tag", "name": "fromEnv", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-155002-155053/notes_frontend/services/api.ts", "pattern": "/^  const fromEnv = config.public.apiBase as string | undefined;$/", "language": "TypeScript", "kind": "constant", "scope": "getBaseUrl", "scopeKind": "function"}, {"_type": "tag", "name": "getBaseUrl", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-155002-155053/notes_frontend/services/api.ts", "pattern": "/^function getBaseUrl(): string {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "headers", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-155002-155053/notes_frontend/services/api.ts", "pattern": "/^  const headers: Record<string, string> = {$/", "language": "TypeScript", "kind": "constant", "scope": "apiFetch", "scopeKind": "function"}, {"_type": "tag", "name": "headers", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-155002-155053/notes_frontend/services/api.ts", "pattern": "/^  headers?: Record<string, string>;$/", "language": "TypeScript", "kind": "property", "scope": "ApiOptions", "scopeKind": "interface"}, {"_type": "tag", "name": "method", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-155002-155053/notes_frontend/services/api.ts", "pattern": "/^  method?: HttpMethod;$/", "language": "TypeScript", "kind": "property", "scope": "ApiOptions", "scopeKind": "interface"}, {"_type": "tag", "name": "path", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-155002-155053/notes_frontend/services/api.ts", "pattern": "/^  const url = `${base}${path.startsWith('\\/') ? path : `\\/${path}`}`;$/", "language": "TypeScript", "kind": "constant", "scope": "apiFetch", "scopeKind": "function"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-155002-155053/notes_frontend/services/api.ts", "pattern": "/^  const res = await fetch(url, {$/", "language": "TypeScript", "kind": "constant", "scope": "apiFetch", "scopeKind": "function"}, {"_type": "tag", "name": "token", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-155002-155053/notes_frontend/services/api.ts", "pattern": "/^  const token = opts.token ?? (typeof window !== 'undefined' ? localStorage.getItem('auth_token'/", "language": "TypeScript", "kind": "constant", "scope": "apiFetch", "scopeKind": "function"}, {"_type": "tag", "name": "token", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-155002-155053/notes_frontend/services/api.ts", "pattern": "/^  token?: string | null;$/", "language": "TypeScript", "kind": "property", "scope": "ApiOptions", "scopeKind": "interface"}, {"_type": "tag", "name": "url", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-155002-155053/notes_frontend/services/api.ts", "pattern": "/^  const url = `${base}${path.startsWith('\\/') ? path : `\\/${path}`}`;$/", "language": "TypeScript", "kind": "constant", "scope": "apiFetch", "scopeKind": "function"}], "hash": "6f12969864cde070e9cfcb071a574155", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/services/api.ts", "fields": [{"name": "interface ApiOptions {", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "body?: any;", "scope": "ApiOptions", "scopeKind": "interface", "description": "unavailable"}, {"name": "headers?: Record<string, string>;", "scope": "ApiOptions", "scopeKind": "interface", "description": "unavailable"}, {"name": "method?: HttpMethod;", "scope": "ApiOptions", "scopeKind": "interface", "description": "unavailable"}, {"name": "token?: string | null;", "scope": "ApiOptions", "scopeKind": "interface", "description": "unavailable"}], "revision_history": [{"26": ""}]}